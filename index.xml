<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jrem.me</title>
    <link>https://j-buss.github.io/jb_blog/</link>
    <description>Recent content on jrem.me</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Dec 2019 05:54:03 -0600</lastBuildDate>
    
	<atom:link href="https://j-buss.github.io/jb_blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flask Part 2 - Reading BigQuery</title>
      <link>https://j-buss.github.io/jb_blog/posts/flask/part_02/</link>
      <pubDate>Sun, 29 Dec 2019 05:54:03 -0600</pubDate>
      
      <guid>https://j-buss.github.io/jb_blog/posts/flask/part_02/</guid>
      <description>This is the next step in my Flask series. The previous post culminated into deploying an extremely simple application on GCP App Engine: Flask Part 1 - Simple App. In this post we will extend the simple Flask App and read some data from a public dataset in BigQuery.
We will break up the work into 3 steps:
 Simple Query Job Display with Template Run Asynchronously  Assumptions:  Familiarity with Python Familiarity with Google Cloud Platform Access to a GCP Project with ability to deploy App Engine Linux working environment  This tutorial leverages GCP Cloud Shell Steps are not dependent on Linux, but haven&#39;t been tested in other environments   Also, I am assuming you have followed along with the previous post: Flask Part 1 - Simple App  1.</description>
    </item>
    
    <item>
      <title>MLflow on Google Cloud Platform</title>
      <link>https://j-buss.github.io/jb_blog/posts/machine-learning/mlflow-introduction/</link>
      <pubDate>Sun, 22 Dec 2019 10:25:54 -0600</pubDate>
      
      <guid>https://j-buss.github.io/jb_blog/posts/machine-learning/mlflow-introduction/</guid>
      <description>With this post we will setup MLflow and experiment with the machine learning workflow. Specifically we will install MLflow on a compute engine in GCP.
Assumptions:  Familiarity with Python, and scikit-learn Access to a linux system  While the steps below don&#39;t necessarily require linux they were performed on linux so I can&#39;t speak to the ability to perform on Windows or Mac OS   Google Cloud Platform familiarity and access to a GCP project  Part 1: Install MLFlow MLflow is an &amp;ldquo;open source platform for the machine learning lifecycle&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Copy Code to Clipboard</title>
      <link>https://j-buss.github.io/jb_blog/posts/hugo-website/copy-code-clipboard/</link>
      <pubDate>Tue, 17 Dec 2019 16:09:33 -0600</pubDate>
      
      <guid>https://j-buss.github.io/jb_blog/posts/hugo-website/copy-code-clipboard/</guid>
      <description>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;style&gt;
blockquote {
    margin: 0;
}

blockquote p {
    padding: 15px;
    background: #eee;
    border-radius: 5px;
}

blockquote p::before {
    content: &#39;\201C&#39;;
}

blockquote p::after {
    content: &#39;\201D&#39;;
}
&lt;/style&gt;
&lt;blockquote cite=&#34;https://cloud.google.com/stackdriver/&#34;&gt;
    &lt;p&gt;Imitation is not just the sincerest form of flattery - it&amp;#39;s the sincerest form of learning.&lt;/p&gt;
    &lt;footer&gt;George Bernard Shaw&lt;/footer&gt;
&lt;/blockquote&gt;
&lt;/html&gt;

&lt;h3 id=&#34;add-a-copy-to-clipboard-button-in-hugo&#34;&gt;Add a &amp;ldquo;Copy to Clipboard&amp;rdquo; button in Hugo&lt;/h3&gt;
&lt;p&gt;One of the benefits of using open source software is the ability to learn from others. I have used that to my advantage over my career and want to make sure to pay it forward (in any small way I can).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flask Part 1 - Simple App</title>
      <link>https://j-buss.github.io/jb_blog/posts/flask/part_01/</link>
      <pubDate>Fri, 13 Dec 2019 08:00:00 +0000</pubDate>
      
      <guid>https://j-buss.github.io/jb_blog/posts/flask/part_01/</guid>
      <description>There are many Flask tutorials online that describe the details of using the lightweight Python framework. With this series I do not intend to recreate the exhaustive tutorials that have been done. I simply wanted a quick 3-post series to get up and running with deploying Flask to GCP App Engine and using data from Big Query.
Within this post, Part 1, we will create a Flask app locally and then push it to GCP App Engine.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://j-buss.github.io/jb_blog/about/</link>
      <pubDate>Tue, 10 Dec 2019 05:52:36 -0600</pubDate>
      
      <guid>https://j-buss.github.io/jb_blog/about/</guid>
      <description>My name is Jeremy Buss and throughout my life I have been inquisitive. In elementary school this passion took the shape as a love of reading. I would spend most evenings after school reading anything I could get my hands on. I especially loved reading stories about people and the impact they made. It felt like I had a backstage pass to the lives of influential individuals.
As I progressed through high school and into college this inquisitive nature led me to study physics and mathematics.</description>
    </item>
    
  </channel>
</rss>